{{- $org := index $.Values.OrdererOrgs 1 }}
{{- range $i, $e := until ($org.Template.Count | int) }}

apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: orderingnode-material--{{ $i }}
data:
  genesis.block: |-
      {{ $.Files.Get "channel-artifacts/genesis.block" | b64enc }}
  hosts.config: |-
      {{ $.Files.Get "orderingnode-material/config/hosts.config" | b64enc }}
  node.config: |-
      {{ $.Files.Get "orderingnode-material/config/node.config" | b64enc }}
  system.config: |-
      {{ $.Files.Get "orderingnode-material/config/system.config" | b64enc }}
  # private key
  {{- $myName := printf "%s.%s" ($i | toString) $org.Domain }}
  {{- $ks := (printf "crypto-config/ordererOrganizations/%s/orderers/%s/msp/keystore/*" $org.Domain $myName )}}
  {{- range $path, $bytes := $.Files.Glob $ks }}
  {{- $vars:= dict "firstKey" true }}
  {{- if not $vars.firstKey }}
    {{ fail (printf "Multiple private keys in folder: crypto-config/ordererOrganizations/%s/orderers/%s/msp/keystore/" $org.Domain $myName ) }}
  {{- end }}
  keystore.pem: |-
      {{ $.Files.Get $path | b64enc }}
      {{- $_ := set $vars "firstKey" false }}
  {{- end }}
  # frontend cert
  cert1000.pem: |- 
      {{ $.Files.Get "crypto-config/ordererOrganizations/yoleanfront.se/orderers/1000.yoleanfront.se/msp/signcerts/1000.yoleanfront.se-cert.pem" | b64enc }}
  # range hosts cert
  {{- range $ii, $e := until ($org.Template.Count | int) }}
  {{- $commonName := printf "%s.%s" ($ii | toString) $org.Domain }}
  # one key for each commonName (node)
  {{- $path :=  (printf "crypto-config/ordererOrganizations/%s/orderers/%s/msp/signcerts/%s-cert.pem" $org.Domain $commonName $commonName) }}
  cert{{ $ii }}.pem: |-
    {{ $.Files.Get $path | b64enc }}
  {{- end }}
  
---
{{- end }}